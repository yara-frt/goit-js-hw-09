{"mappings":"AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,OAAQJ,SAASC,cAAc,wBAC/BI,OAAQL,SAASC,cAAc,WAGjCK,QAAQC,IAAIT,EAAKO,QAEjBP,EAAKC,KAAKS,iBAAiB,UAqB3B,SAAkBC,GAChBA,EAAMC,iBACN,MAAQC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIT,OAAEA,IAAaK,EAAMK,cAEpD,IAAIC,EAAYC,OAAOJ,EAAMK,OACzBC,EAAWF,OAAOH,EAAKI,OACvBE,EAAaH,OAAOZ,EAAOa,OAG/B,MAAMG,EAASC,aAAY,KAezB,GAzCJ,SAAuBC,EAAUV,GAa/B,OAXgB,IAAIW,SAAQ,CAACC,EAAKC,KAChC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAI,CAAEM,SAAAR,E,MAAUV,IAEhBa,EAAI,CAAEK,SAAAR,E,MAAUV,GAAQ,GAEzBA,EAAM,G,CAiBTmB,CAAcC,EAAUjB,GACvBkB,MAAMC,IACP5B,QAAQC,IAAI,uBAAqB2B,EAAIJ,eAAoBI,EAAEtB,UAAe,IAEzEuB,OAAOC,IACR9B,QAAQC,IAAI,sBAAoB6B,EAAEN,eAAiBM,EAAExB,UAAY,IAEhEyB,SAAQ,KACPvC,EAAKC,KAAKuC,OAAO,IAMfN,IAAab,EAGb,OAFAa,EAAW,OACXO,cAAcnB,GAGdY,GAAY,EACZjB,GAAYG,C,GAIfH,E,IArDL,IAAIiB,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  delayStep: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  button: document.querySelector('button'),\n}\n\nconsole.log(refs.button);\n\nrefs.form.addEventListener('submit', onSubmit);\n\nlet position = 1;\n\nfunction createPromise(position, delay) {\n  \n  const promise = new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay })\n      } else {\n        rej({ position, delay })\n      }\n    }, delay);\n    })\n    \n  return promise\n  \n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const { elements: { delay, step, amount } } = event.currentTarget;\n  \n  let promDelay = Number(delay.value);\n  let promStep = Number(step.value);\n  let promAmount = Number(amount.value);\n\n\n  const promId = setInterval(() => {\n    createPromise(position, promDelay)\n    .then((result) => {\n    console.log(`✅ Fulfilled promise ${result.position} in ${result.delay}ms`);\n    })\n    .catch((err) => {\n    console.log(`❌ Rejected promise ${err.position} in ${err.delay}ms`);\n    })\n    .finally(() => {\n      refs.form.reset()\n      // console.log(promDelay)\n      // console.log(promStep)\n      // console.log(promAmount)\n    })\n\n    if (position === promAmount) {\n        position = 1\n        clearInterval(promId)\n        return \n    } else {\n        position += 1\n        promDelay+= promStep\n      }\n       \n\n  }, promDelay)\n\n  \n}"],"names":["$47d4ff9957288465$var$refs","form","document","querySelector","firstDelay","delayStep","amount","button","console","log","addEventListener","event","preventDefault","elements","delay","step","currentTarget","promDelay","Number","value","promStep","promAmount","promId","setInterval","position1","Promise","res","rej","shouldResolve","Math","random","setTimeout","position","$47d4ff9957288465$var$createPromise","$47d4ff9957288465$var$position","then","result","catch","err","finally","reset","clearInterval"],"version":3,"file":"03-promises.cc42afb3.js.map"}